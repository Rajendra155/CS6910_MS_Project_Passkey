{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Passkey(){const[email,setEmail]=useState('');const[error,setError]=useState('');// This is a helper function to convert base64url to base64\nconst base64UrlToBase64=base64url=>{// Add padding\nconst padding='='.repeat((4-base64url.length%4)%4);// Convert base64url to base64 by replacing characters\nreturn base64url.replace(/-/g,'+').replace(/_/g,'/')+padding;};// Comments\n// Helper function to convert base64url to binary array\nconst base64UrlToUint8Array=base64url=>{// First convert base64url to base64\nconst base64=base64UrlToBase64(base64url);// Then convert base64 to binary\nconst binary=atob(base64);// Convert to Uint8Array\nreturn new Uint8Array(binary.split('').map(c=>c.charCodeAt(0)));};const handleRegister=async()=>{if(!email){setError('Please enter your email');return;}setError('');try{const{data:publicKeyCredentialCreationOptions}=await axios.post('webauthn/register',{email});const publicKeyCredentialCreationOptionsParsed={// Convert base64url challenge to Uint8Array\nchallenge:base64UrlToUint8Array(publicKeyCredentialCreationOptions.challenge),rp:publicKeyCredentialCreationOptions.rp,user:{// Convert base64url user.id to Uint8Array\nid:base64UrlToUint8Array(publicKeyCredentialCreationOptions.user.id),name:publicKeyCredentialCreationOptions.user.name,displayName:publicKeyCredentialCreationOptions.user.displayName},pubKeyCredParams:publicKeyCredentialCreationOptions.pubKeyCredParams,authenticatorSelection:publicKeyCredentialCreationOptions.authenticatorSelection,attestation:publicKeyCredentialCreationOptions.attestation};const credential=await navigator.credentials.create({publicKey:publicKeyCredentialCreationOptionsParsed});await axios.post('webauthn/register/complete',{email,credential});window.alert('Registration successful');setEmail('');}catch(error){console.error('Registration failed:',error);setError('Registration failed: '+error.message);}};const handleAuthenticate=async()=>{if(!email){setError('Email is required');return;}try{const{data:publicKeyCredentialRequestOptions}=await axios.post('webauthn/authenticate',{email});const publicKeyCredentialRequestOptionsParsed={// Convert base64url challenge to Uint8Array\nchallenge:base64UrlToUint8Array(publicKeyCredentialRequestOptions.challenge),allowCredentials:[{type:'public-key',// Convert base64url credential ID to Uint8Array\nid:base64UrlToUint8Array(publicKeyCredentialRequestOptions.allowCredentials[0].id),transports:['internal']}],userVerification:publicKeyCredentialRequestOptions.userVerification};const assertion=await navigator.credentials.get({publicKey:publicKeyCredentialRequestOptionsParsed});const assertionResponse={id:assertion.id,rawId:btoa(String.fromCharCode(...new Uint8Array(assertion.rawId))),type:assertion.type,response:{authenticatorData:btoa(String.fromCharCode(...new Uint8Array(assertion.response.authenticatorData))),clientDataJSON:btoa(String.fromCharCode(...new Uint8Array(assertion.response.clientDataJSON))),signature:btoa(String.fromCharCode(...new Uint8Array(assertion.response.signature))),userHandle:assertion.response.userHandle?btoa(String.fromCharCode(...new Uint8Array(assertion.response.userHandle))):null}};await axios.post('webauthn/authenticate/complete',{email,assertion:assertionResponse});window.alert('Authentication successful');setEmail('');}catch(error){console.error('Authentication failed:',error);setError('Authentication failed: '+error.message);}};// Rest of your component remains the same...\nreturn/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:\"center\",marginTop:\"50px\"},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"WebAuthn Authentication\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Enter your email\",value:email,onChange:e=>setEmail(e.target.value),style:{padding:\"10px\",marginRight:\"10px\"}}),/*#__PURE__*/_jsx(\"br\",{}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:error}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:handleRegister,style:{padding:\"10px\",marginRight:\"10px\",background:\"blue\",color:\"white\"},children:\"Register\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleAuthenticate,style:{padding:\"10px\",background:\"green\",color:\"white\"},children:\"Authenticate\"})]});}export default Passkey;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","Passkey","email","setEmail","error","setError","base64UrlToBase64","base64url","padding","repeat","length","replace","base64UrlToUint8Array","base64","binary","atob","Uint8Array","split","map","c","charCodeAt","handleRegister","data","publicKeyCredentialCreationOptions","post","publicKeyCredentialCreationOptionsParsed","challenge","rp","user","id","name","displayName","pubKeyCredParams","authenticatorSelection","attestation","credential","navigator","credentials","create","publicKey","window","alert","console","message","handleAuthenticate","publicKeyCredentialRequestOptions","publicKeyCredentialRequestOptionsParsed","allowCredentials","type","transports","userVerification","assertion","get","assertionResponse","rawId","btoa","String","fromCharCode","response","authenticatorData","clientDataJSON","signature","userHandle","style","textAlign","marginTop","children","placeholder","value","onChange","e","target","marginRight","color","onClick","background"],"sources":["C:/Users/chitt/OneDrive/Desktop/REACT/passkey/Frontend/src/component/passkey.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Passkey() {\r\n  const [email, setEmail] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  // This is a helper function to convert base64url to base64\r\n  const base64UrlToBase64 = (base64url) => {\r\n    // Add padding\r\n    const padding = '='.repeat((4 - base64url.length % 4) % 4);\r\n\r\n    // Convert base64url to base64 by replacing characters\r\n    return base64url\r\n      .replace(/-/g, '+')\r\n      .replace(/_/g, '/')\r\n      + padding;\r\n  };\r\n  // Comments\r\n\r\n\r\n  // Helper function to convert base64url to binary array\r\n  const base64UrlToUint8Array = (base64url) => {\r\n    // First convert base64url to base64\r\n    const base64 = base64UrlToBase64(base64url);\r\n    \r\n    // Then convert base64 to binary\r\n    const binary = atob(base64);\r\n    // Convert to Uint8Array\r\n    return new Uint8Array(binary.split('').map(c => c.charCodeAt(0)));\r\n  };\r\n\r\n  const handleRegister = async () => {\r\n    if (!email) {\r\n      setError('Please enter your email');\r\n      return;\r\n    }\r\n\r\n    setError('');\r\n    try {\r\n      const { data: publicKeyCredentialCreationOptions } = await axios.post('webauthn/register', { email });\r\n\r\n      const publicKeyCredentialCreationOptionsParsed = {\r\n        // Convert base64url challenge to Uint8Array\r\n        challenge: base64UrlToUint8Array(publicKeyCredentialCreationOptions.challenge),\r\n        rp: publicKeyCredentialCreationOptions.rp,\r\n        user: {\r\n          // Convert base64url user.id to Uint8Array\r\n          id: base64UrlToUint8Array(publicKeyCredentialCreationOptions.user.id),\r\n          name: publicKeyCredentialCreationOptions.user.name,\r\n          displayName: publicKeyCredentialCreationOptions.user.displayName\r\n        },\r\n        pubKeyCredParams: publicKeyCredentialCreationOptions.pubKeyCredParams,\r\n        authenticatorSelection: publicKeyCredentialCreationOptions.authenticatorSelection,\r\n        attestation: publicKeyCredentialCreationOptions.attestation,\r\n      };\r\n\r\n      const credential = await navigator.credentials.create({\r\n        publicKey: publicKeyCredentialCreationOptionsParsed,\r\n      });\r\n\r\n      await axios.post('webauthn/register/complete', {\r\n        email,\r\n        credential,\r\n      });\r\n\r\n      window.alert('Registration successful');\r\n      setEmail('');\r\n\r\n    } catch (error) {\r\n      console.error('Registration failed:', error);\r\n      setError('Registration failed: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const handleAuthenticate = async () => {\r\n    if (!email) {\r\n      setError('Email is required');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const { data: publicKeyCredentialRequestOptions } = await axios.post(\r\n        'webauthn/authenticate',\r\n        { email }\r\n      );\r\n\r\n      const publicKeyCredentialRequestOptionsParsed = {\r\n        // Convert base64url challenge to Uint8Array\r\n        challenge: base64UrlToUint8Array(publicKeyCredentialRequestOptions.challenge),\r\n        allowCredentials: [{\r\n          type: 'public-key',\r\n          // Convert base64url credential ID to Uint8Array\r\n          id: base64UrlToUint8Array(publicKeyCredentialRequestOptions.allowCredentials[0].id),\r\n          transports: ['internal']\r\n        }],\r\n        userVerification: publicKeyCredentialRequestOptions.userVerification\r\n      };\r\n\r\n      const assertion = await navigator.credentials.get({ \r\n        publicKey: publicKeyCredentialRequestOptionsParsed \r\n      });\r\n\r\n      const assertionResponse = {\r\n        id: assertion.id,\r\n        rawId: btoa(String.fromCharCode(...new Uint8Array(assertion.rawId))),\r\n        type: assertion.type,\r\n        response: {\r\n          authenticatorData: btoa(String.fromCharCode(...new Uint8Array(assertion.response.authenticatorData))),\r\n          clientDataJSON: btoa(String.fromCharCode(...new Uint8Array(assertion.response.clientDataJSON))),\r\n          signature: btoa(String.fromCharCode(...new Uint8Array(assertion.response.signature))),\r\n          userHandle: assertion.response.userHandle ? \r\n            btoa(String.fromCharCode(...new Uint8Array(assertion.response.userHandle))) : \r\n            null\r\n        }\r\n      };\r\n\r\n      await axios.post('webauthn/authenticate/complete', {\r\n        email,\r\n        assertion: assertionResponse\r\n      });\r\n\r\n      window.alert('Authentication successful');\r\n      setEmail('');\r\n\r\n    } catch (error) {\r\n      console.error('Authentication failed:', error);\r\n      setError('Authentication failed: ' + error.message);\r\n    }\r\n  };\r\n\r\n  // Rest of your component remains the same...\r\n  return (\r\n    <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\r\n      <h2>WebAuthn Authentication</h2>\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Enter your email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        style={{ padding: \"10px\", marginRight: \"10px\" }}\r\n      />\r\n      <br />\r\n      {error && <p style={{color:'red'}}>{error}</p>}\r\n      <br />\r\n      <button onClick={handleRegister} style={{ padding: \"10px\", marginRight: \"10px\", background: \"blue\", color: \"white\" }}>\r\n        Register\r\n      </button>\r\n      <button onClick={handleAuthenticate} style={{ padding: \"10px\", background: \"green\", color: \"white\" }}>\r\n        Authenticate\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Passkey;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}